#!/usr/bin/env bash
# set -ex
executable=$(basename $0)
if [ "$executable" == "vegen-clang" ]
then
  clang=@LLVM_TOOLS_BINARY_DIR@/clang
elif [ "$executable" == "vegen-clang++" ]
then
  clang=@LLVM_TOOLS_BINARY_DIR@/clang++
else
  echo "Error invoking vegen-clang"
  exit 1
fi

opt=@LLVM_TOOLS_BINARY_DIR@/opt
llc=@LLVM_TOOLS_BINARY_DIR@/llc
loadlib=yes
optlevel=-O0
real_args=""
output_file="a.out"
lasto=""
optargs=""
linkargs=""
for arg in $*
do
  if test $arg = -fno-vectorize
  then loadlib=no
  elif test $arg = -O0 -o $arg = -O1 -o $arg = -O2 -o $arg = -O3 -o $arg = -Os -o $arg = -Oz
  then optlevel=$arg
  elif test $arg = -o -o $arg = -mllvm
  then lasto=$arg
  elif test "$lasto" = "-o"
  then output_file=$arg; lasto=""
  elif test "$lasto" = "-mllvm"
  then optargs="$optargs $arg"; lasto="" 
  elif test ${arg: 0: 2} = -l -a ${#arg} -gt 2
  then linkargs="$linkargs $arg"
  elif test "$arg" = "-c" -o "$arg" = "-S"
  then real_args="$real_args $arg"; linkargs="$linkargs $arg"
  else 
    real_args="$real_args $arg"
  fi
done

if test $loadlib = yes
then lib='-load-pass-plugin=@CMAKE_BINARY_DIR@/gslp/libGSLP.so --wrappers-dir=@CMAKE_BINARY_DIR@'
fi

exec $clang -O0 -emit-llvm -S -Xclang -disable-O0-optnone -o - -fno-slp-vectorize -fno-vectorize $real_args |\
     $opt $lib $optlevel $optargs -S | $clang -x ir -o $output_file - $linkargs
